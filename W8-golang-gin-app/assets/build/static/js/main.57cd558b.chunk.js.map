{"version":3,"sources":["store/auth-context.js","components/Layout/NavigationBar.js","components/Layout/Layout.js","components/Home/Home.js","pages/HomePage.js","components/Errors/Errors.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/Posts/PostForm.js","components/Posts/Post.js","components/Posts/PostsLists.js","components/Posts/Posts.js","pages/PostsPage.js","App.js","index.js"],"names":["AuthContext","React","createContext","token","loggedIn","login","logout","AuthContextProvider","props","tokenKey","useState","localStorage","getItem","setToken","contextValue","setItem","removeItem","Provider","value","children","NavigationBar","history","useHistory","authContext","useContext","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","onClick","replace","Layout","Home","HomePage","Errors","errors","errorList","Object","keys","key","push","map","error","AuthForm","usernameRef","useRef","passwordRef","loggingIn","setLoggingIn","setErrors","endpoint","event","preventDefault","usernameValue","current","passwordValue","fetch","method","body","JSON","stringify","Username","Password","headers","response","json","data","ok","errorText","hasOwnProperty","Error","jwt","message","header","mainButtonText","switchModeButtonText","errorContent","length","onSubmit","htmlFor","required","ref","prevState","AuthPage","PostForm","titleValue","setTitleValue","contentValue","setContentValue","populateFields","useCallback","post","Title","Content","onEditPost","ID","onAddPost","useEffect","submitButtonText","onChange","target","rows","Post","editing","setEditing","switchModeHandler","deleteHandler","a","onDeletePost","cardTitle","cardBody","cardButtons","PostsList","posts","Posts","setPosts","fetchPostsHandler","postsContent","postID","filter","postData","PostsPage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57cd558b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: null,\n  loggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const tokenKey = 'rgbToken';\n\n  const [token, setToken] = useState(localStorage.getItem(tokenKey));\n\n  const loggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem(tokenKey, token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(tokenKey);\n  };\n\n  const contextValue = {\n    token: token,\n    loggedIn: loggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\n\nconst NavigationBar = () => {\n  const history = useHistory();\n\n  const authContext = useContext(AuthContext);\n\n  const loggedIn = authContext.loggedIn;\n\n  const logoutHandler = () => {\n    authContext.logout();\n    history.replace('/');\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n        <div className=\"d-flex flex-row\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">RGB</Link>\n            </li>\n            {loggedIn && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/posts\">My posts</Link>\n              </li>\n            )}\n          </ul>\n        </div>\n        <div className=\"d-flex flex-row justify-content-end\">\n          <ul className=\"navbar-nav mr-auto\">\n            {!loggedIn && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/auth\">Login</Link>\n              </li>\n            )}\n            {loggedIn && (\n              <li className=\"nav-item\">\n                <button className=\"btn btn-dark\" onClick={logoutHandler}>LOGOUT</button>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavigationBar;\n","import { Fragment } from 'react';\n\nimport './Layout.css';\n\nimport NavigationBar from './NavigationBar';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <NavigationBar/>\n      <main>\n        <div className=\"container\">{props.children}</div>\n      </main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","const Home = () => {\n  return (\n    <section>\n      <h1>Welcome to React Gin Blog!</h1>\n    </section>\n  );\n};\n\nexport default Home;\n","import Home from '../components/Home/Home';\n\nconst HomePage = () => {\n  return <Home/>;\n};\n\nexport default HomePage;\n","const Errors = (errors) => {\n  let errorList = [];\n  for (var key of Object.keys(errors)) {\n    errorList.push(errors[key]);\n  }\n  return (\n    <div className=\"mt-3\">\n      {errorList.map(error => <p className=\"alert alert-danger\">{error}</p>)}\n    </div>\n  )\n}\n\nexport default Errors;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n\n  const authContext = useContext(AuthContext);\n\n  const [loggingIn, setLoggingIn] = useState(true);\n  const [errors, setErrors] = useState({});\n\n  const switchModeHandler = () => {\n    setLoggingIn((prevState) => !prevState);\n    setErrors({});\n  };\n\n  const endpoint = loggingIn ? '/api/signin' : '/api/signup'\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    setErrors({});\n\n    const usernameValue = usernameRef.current.value;\n    const passwordValue = passwordRef.current.value;\n\n    try {\n      const response = await fetch(endpoint,\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            Username: usernameValue,\n            Password: passwordValue,\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = loggingIn ? 'Login failed' : 'Sign up failed';\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n        if ((typeof data['error'] === 'string')) {\n          setErrors({'unknown': data['error']})\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        authContext.login(data.jwt)\n        history.replace('/');\n      }\n    } catch (error) {\n      setErrors({\"error\": error.message});\n    }\n  };\n\n  const header = loggingIn ? 'Login' : 'Sign up';\n  const mainButtonText = loggingIn ? 'Login' : 'Create account';\n  const switchModeButtonText = loggingIn ? 'Create new account' : 'Login with existing account';\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n\n  return (\n    <section>\n      <h1 className=\"text-center\">{header}</h1>\n      <div className=\"container w-50\">\n        <form onSubmit={submitHandler}>\n          <div className=\"form-group pb-3\">\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" type=\"text\" className=\"form-control\" required ref={usernameRef} ></input>\n          </div>\n          <div className=\"form-group pb-3\">\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" className=\"form-control\" required ref={passwordRef} ></input>\n          </div>\n          <div className=\"pt-3 d-flex justify-content-between\">\n            <button type=\"submit\" className=\"btn btn-success\">{mainButtonText}</button>\n            <button type=\"button\" className=\"btn btn-link\" onClick={switchModeHandler}>{switchModeButtonText}</button>\n          </div>\n        </form>\n        {errorContent}\n      </div>\n    </section>\n  );\n}\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm/>;\n};\n\nexport default AuthPage;\n","import { useState, useContext, useEffect, useCallback } from 'react';\n\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\n\nconst PostForm = (props) => {\n  const authContext = useContext(AuthContext);\n\n  const [titleValue, setTitleValue] = useState('');\n  const [contentValue, setContentValue] = useState('');\n\n  const [errors, setErrors] = useState({});\n\n  const populateFields = useCallback(() => {\n    if (props.post) {\n      setTitleValue(props.post.Title);\n      setContentValue(props.post.Content);\n    }\n  }, [props.post]);\n\n  useEffect(() => {\n    populateFields();\n  }, [populateFields]);\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    setErrors({});\n\n    try {\n      const method = props.onEditPost ? 'PUT' : 'POST';\n      let body = {\n        Title: titleValue,\n        Content: contentValue,\n      }\n      if (props.onEditPost) {\n        body.ID = props.post.ID;\n      }\n      const response = await fetch('api/posts',\n        {\n          method: method,\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + authContext.token,\n          },\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = 'Failed to add new post.';\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n        if ((typeof data['error'] === 'string')) {\n          setErrors({ 'unknown': data['error'] })\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        setTitleValue('');\n        setContentValue('');\n        if (props.onAddPost) {\n          props.onAddPost(data.data);\n        }\n        if (props.onEditPost) {\n          props.onEditPost(data.data);\n        }\n      }\n    } catch (error) {\n      setErrors({ \"error\": error.message });\n    }\n  };\n\n  const titleChangeHandler = (event) => { setTitleValue(event.target.value) }\n  const contentChangeHandler = (event) => { setContentValue(event.target.value) }\n\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n  const submitButtonText = props.onEditPost ? 'Update Post' : 'Add Post';\n\n  return (\n    <section>\n      <div className=\"container w-75 pb-4\">\n        <form onSubmit={submitHandler}>\n          <div className=\"form-group pb-3\">\n            <label htmlFor=\"title\">Title</label>\n            <input id=\"title\" type=\"text\" className=\"form-control\" required value={titleValue} onChange={titleChangeHandler}></input>\n          </div>\n          <div className=\"form-group pb-3\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" className=\"form-control\" rows=\"5\" required value={contentValue} onChange={contentChangeHandler}></textarea>\n          </div>\n          <button type=\"submit\" className=\"btn btn-success\">{submitButtonText}</button>\n        </form>\n        {errorContent}\n      </div>\n    </section>\n  );\n}\n\nexport default PostForm;\n","import { useState, useContext } from 'react';\n\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\nimport PostForm from \"./PostForm\";\n\nconst Post = (props) => {\n  const [editing, setEditing] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const authContext = useContext(AuthContext);\n\n  const switchModeHandler = () => {\n    setEditing((prevState) => !prevState);\n    setErrors({});\n  };\n\n  async function deleteHandler() {\n    try {\n      const response = await fetch('api/posts/' + props.post.ID,\n        {\n          method: 'DELETE',\n          headers: {\n            'Authorization': 'Bearer ' + authContext.token,\n          },\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = 'Failed to add new post.';\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n        if ((typeof data['error'] === 'string')) {\n          setErrors({ 'unknown': data['error'] })\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        props.onDeletePost(props.post.ID);\n      }\n    } catch (error) {\n      setErrors({ \"error\": error.message });\n    }\n  };\n\n  const editPostHandler = () => {\n    setEditing(false);\n    props.onEditPost();\n  }\n\n  const cardTitle = editing ? 'Edit post' : props.post.Title;\n  const cardBody = editing ? <PostForm post={props.post} onEditPost={editPostHandler} editing={true}/> : props.post.Content;\n  const switchModeButtonText = editing ? 'Cancel' : 'Edit';\n  const cardButtons = editing ?\n    <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-link\" onClick={switchModeHandler}>{switchModeButtonText}</button>\n      <button type=\"button\" className=\"btn btn-danger float-right mx-3\" onClick={deleteHandler}>Delete</button>\n    </div>\n    :\n    <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-link\" onClick={switchModeHandler}>{switchModeButtonText}</button>\n      <button type=\"button\" className=\"btn btn-danger float-right mx-3\" onClick={deleteHandler}>Delete</button>\n    </div>\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n\n  return (\n    <div className=\"card mb-5 pb-2\">\n      <div className=\"card-header\">{cardTitle}</div>\n      <div className=\"card-body\">{cardBody}</div>\n      {cardButtons}\n      {errorContent}\n    </div>\n  );\n};\n\nexport default Post;\n","import Post from \"./Post\";\n\nconst PostsList = (props) => {\n  return (\n    <ul>\n      {props.posts.map((post) => (\n        <Post\n          onEditPost={props.onEditPost}\n          onDeletePost={props.onDeletePost}\n          key={post.ID}\n          post={post} />\n      ))}\n    </ul>\n  );\n};\n\nexport default PostsList;\n","import { useContext, useState, useEffect, useCallback } from \"react\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport Errors from \"../Errors/Errors\";\nimport PostForm from \"./PostForm\";\nimport PostsList from \"./PostsLists\";\n\nconst Posts = () => {\n  const authContext = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [errors, setErrors] = useState({});\n\n  const fetchPostsHandler = useCallback(async () => {\n    setErrors({});\n\n    try {\n      const response = await fetch('/api/posts',\n        {\n          headers: {\n            'Authorization': 'Bearer ' + authContext.token,\n          },\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = 'Fetching posts failed.';\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n        if ((typeof data['error'] === 'string')) {\n          setErrors({ 'unknown': data['error'] })\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        setPosts(data.data);\n      }\n    } catch (error) {\n      setErrors({ \"error\": error.message });\n    }\n  }, [authContext.token]);\n\n  useEffect(() => {\n    fetchPostsHandler();\n  }, [fetchPostsHandler]);\n\n  const addPostHandler = (postData) => {\n    setPosts((prevState) => { return [...prevState, postData] });\n  }\n\n  const deletePostHandler = (postID) => {\n    setPosts((prevState) => {\n      return prevState.filter(post => { return post.ID !== postID; })\n    })\n  }\n\n  const editPostHandler = () => {\n    fetchPostsHandler();\n  }\n\n  const postsContent = posts.length === 0 ?\n    <p>No posts yet</p>\n    :\n    <PostsList\n      posts={posts}\n      onEditPost={editPostHandler}\n      onDeletePost={deletePostHandler} />;\n\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n\n  return (\n    <section>\n      <h1 className=\"pb-4\">My posts</h1>\n      <PostForm onAddPost={addPostHandler}/>\n      {errorContent}\n      {postsContent}\n    </section>\n  );\n};\n\nexport default Posts;\n","import Posts from '../components/Posts/Posts';\n\nconst PostsPage = () => {\n  return <Posts/>;\n};\n\nexport default PostsPage;\n","import { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport HomePage from './pages/HomePage';\nimport AuthPage from './pages/AuthPage';\nimport PostsPage from './pages/PostsPage';\nimport { useContext } from 'react';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authContext = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage/>\n        </Route>\n        {!authContext.loggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/posts\">\n          {authContext.loggedIn && <PostsPage />}\n          {!authContext.loggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\"/>\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}